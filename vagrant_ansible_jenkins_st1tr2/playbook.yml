- hosts: all
  become: true
  tasks:
    - name: upgrade all packages on servers
      dnf:
        name: '*'
        state: latest

    - name: Set up repository docker
      shell: |
        dnf install -y yum-utils
        yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
        
    - name: Install docker 
      dnf:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present

    - name: Install python requests
      ansible.builtin.yum:
        name: python3-requests
        state: present

    - name: Add the current user to the docker group
      user:
        name: rocky
        groups: docker
        append: yes

    - name: Start and enable docker
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: create a network with custom IPAM config
      docker_network:
        name: dock_network
        ipam_config:
          - subnet: 192.168.10.0/24
            gateway: 192.168.10.1

    - name: install jenkins
      docker_image:
        name: "jenkins/jenkins"
        source: pull

    - name: create a volume for the master
      docker_volume:
        name: jenkins_home
        state: present

    - name: create a container from the jenkins image
      docker_container:
        name: "jenkins-server"
        image: jenkins/jenkins:lts
        state: started
        restart_policy: always
        ports:
          - "8080:8080"
          - "50000:50000"
        networks:
          - name: dock_network
            ipv4_address: 192.168.10.100
        volumes:
          - "jenkins_home:/var/jenkins_home" 
          - "/var/run/docker.sock:/var/run/docker.sock"
          - "/usr/bin/docker:/usr/bin/docker"

    - name: pull dell'image for the jenkins slave
      docker_image:
        name: jenkins/inbound-agent 
        source: pull

    - name: create a volume for the agent
      docker_volume:
        name: jenkinslave_home
        state: present

    - name: connect the agent with the master 
      docker_container:
        name: jenkinslave
        image: jenkins/inbound-agent:latest
        restart_policy: always
        env:
          JENKINS_URL: "http://jenkins-server:8080"
          JENKINS_AGENT_NAME: "jenkinslave"
          JENKINS_AGENT_WORKDIR: "/home/jenkins/agent"
          JENKINS_SECRET: "jenkins_secret"
        volumes:
          - "jenkinslave_home:/home/jenkins/agent"
          - "/var/run/docker.sock:/var/run/docker.sock"
          - "/usr/bin/docker:/usr/bin/docker"
        networks:
          - name: dock_network
            ipv4_address: 192.168.10.99

    - name: Download kubectl binary in Jenkins container
      community.docker.docker_container_exec:
        container: jenkins-server
        user: root
        command: "curl -LO https://dl.k8s.io/release/v1.27.3/bin/linux/amd64/kubectl"

    - name: Make kubectl executable
      community.docker.docker_container_exec:
        container: jenkins-server
        user: root
        command: "chmod +x kubectl"

    - name: Move kubectl to /usr/local/bin
      community.docker.docker_container_exec:
        container: jenkins-server
        user: root
        command: "mv kubectl /usr/local/bin/"

    - name: Download helm
      community.docker.docker_container_exec:
        container: jenkins-server
        user: root
        command: "curl -fsSL -o /var/jenkins_home/helm.tar.gz https://get.helm.sh/helm-v3.16.3-linux-amd64.tar.gz"

    - name: Extract helm
      community.docker.docker_container_exec:
        container: jenkins-server
        user: root
        command: "tar -xzf /var/jenkins_home/helm.tar.gz -C /var/jenkins_home --strip-components=1 linux-amd64/helm"

    - name: copy helm in usr/bin
      community.docker.docker_container_exec:
        container: jenkins-server
        user: root
        command: "cp /var/jenkins_home/helm /usr/bin" 

    - name: cambio permessi /usr/bin/helm
      community.docker.docker_container_exec:
        container: jenkins-server
        user: root
        command: "chmod +x /usr/bin/helm"
